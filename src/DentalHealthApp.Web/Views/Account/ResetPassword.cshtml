@model DentalHealthApp.Core.DTOs.ResetPasswordDto
@{
    ViewData["Title"] = "Yeni Parola Belirle";
    Layout = "_Layout";
}

<div class="container d-flex align-items-center justify-content-center min-vh-100">
    <div class="card shadow-lg border-0" style="max-width: 500px; width: 100%;">
        <div class="card-body p-5">
            <div class="text-center mb-4">
                <i class="fas fa-lock text-success" style="font-size: 4rem;"></i>
                <h2 class="fw-bold text-success mt-3">Yeni Parola Belirle</h2>
                <p class="text-muted">Güvenli bir parola oluşturun</p>
            </div>

            <form asp-action="ResetPassword" method="post" class="needs-validation" novalidate>
                @Html.AntiForgeryToken()
                
                <input asp-for="Email" type="hidden" />

                <div class="mb-3">
                    <label class="form-label">
                        <i class="fas fa-envelope me-1"></i>E-posta Adresi
                    </label>
                    <input type="email" class="form-control" value="@Model.Email" readonly>
                </div>

                <div class="mb-3">
                    <label asp-for="NewPassword" class="form-label">
                        <i class="fas fa-lock me-1"></i>Yeni Parola
                    </label>
                    <div class="input-group">
                        <input asp-for="NewPassword" type="password" class="form-control" 
                               placeholder="En az 8 karakter" required>
                        <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('NewPassword')">
                            <i class="fas fa-eye" id="toggleIconNewPassword"></i>
                        </button>
                    </div>
                    <small class="form-text text-muted">
                        En az 8 karakter, büyük-küçük harf ve rakam içermelidir
                    </small>
                    <span asp-validation-for="NewPassword" class="text-danger"></span>
                </div>

                <div class="mb-4">
                    <label asp-for="ConfirmNewPassword" class="form-label">
                        <i class="fas fa-lock me-1"></i>Yeni Parola Tekrar
                    </label>
                    <div class="input-group">
                        <input asp-for="ConfirmNewPassword" type="password" class="form-control" 
                               placeholder="Parolayı tekrar giriniz" required>
                        <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('ConfirmNewPassword')">
                            <i class="fas fa-eye" id="toggleIconConfirmNewPassword"></i>
                        </button>
                    </div>
                    <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
                </div>

                <div class="d-grid mb-3">
                    <button type="submit" class="btn btn-success btn-lg">
                        <i class="fas fa-check me-2"></i>Parolayı Güncelle
                    </button>
                </div>

                <div class="text-center">
                    <a asp-action="Login" class="text-decoration-none">
                        <i class="fas fa-arrow-left me-1"></i>Giriş sayfasına dön
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function togglePassword(fieldName) {
            const passwordInput = document.querySelector(`input[name="${fieldName}"]`);
            const toggleIcon = document.getElementById(`toggleIcon${fieldName}`);
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                toggleIcon.className = 'fas fa-eye-slash';
            } else {
                passwordInput.type = 'password';
                toggleIcon.className = 'fas fa-eye';
            }
        }

        // Form validation
        (function() {
            'use strict';
            window.addEventListener('load', function() {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
}